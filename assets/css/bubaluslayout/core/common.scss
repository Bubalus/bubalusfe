// --------------------------------------------
// BubalusFE - The front-end development framework
//
/* Common - 公共樣式 */
// --------------------------------------------

// Floats
// -------------------------

.clear {
  @include clear();
}

	.ie-clearing { display:none; }
.pull-right {
  float: right;
}
.pull-left {
  float: left;
}


// 顯示控制
// -------------------------

.hide {
  display: none !important;
}
.show {
  display: block !important;
}
.invisible {
  visibility: hidden;
}
.text-hide {
  @include hide-text();
}


// For Affix plugin
// -------------------------

.affix {
  position: fixed;
}

.img-responsive {
  @include img-responsive;
}

// MISC
// ----
// Rounded corners
.img-rounded {
  border-radius: 6px;
}

// Image thumbnails
// See thumbnails.less for `.img-thumbnail`

// Perfect circle
.img-circle {
  border-radius: 500px; // crank the border-radius so it works with most reasonably sized images
}



//
// Wells
// --------------------------------------------------


// Base class
.well {
  min-height: 20px;
  padding: 19px;
  margin-bottom: 20px;
  background-color: $well-bg;
  border: 1px solid darken($well-bg, 7%);
  border-radius: $border-radius-base;
  @include box-shadow(inset 0 1px 1px rgba(0,0,0,.05));
  blockquote {
    border-color: #ddd;
    border-color: rgba(0,0,0,.15);
  }
}

// Sizes
.well-large {
  padding: 24px;
  border-radius: $border-radius-large;
}
.well-small {
  padding: 9px;
  border-radius: $border-radius-small;
}

//
// Responsive: Utility classes
// --------------------------------------------------


// IE10 Metro responsive
// Required for Windows 8 Metro split-screen snapping with IE10
//
// Source: http://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/
@-ms-viewport{
  width: device-width;
}

// IE10 on Windows Phone 8
// IE10 on WP8 doesn't report CSS pixels, but actual device pixels. In
// other words, say on a Lumia, you'll get 768px as the device width,
// meaning users will see the tablet styles and not phone styles.
//
// Alternatively you can override this with JS (see source below), but
// we won't be doing that here given our limited scope.
//
// Source: http://timkadlec.com/2013/01/windows-phone-8-and-device-width/
@media screen and (max-width: 400px) {
  @-ms-viewport{
    width: 320px;
  }
}

// Hide from screenreaders and browsers
// Credit: HTML5 Boilerplate
.hidden {
  display: none !important;
  visibility: hidden !important;
}

// Visibility utilities

// For Phones
@include responsive-visibility('.visible-sm');
.visible-md { display: none !important; }
.visible-lg { display: none !important; }

.hidden-sm { display: none !important; }
.hidden-md {
  display: block !important;
}
@include responsive-visibility('.hidden-md');
@include responsive-visibility('.hidden-lg');


// Tablets & small desktops only
@media (min-width: $screen-tablet) and (max-width: $screen-tablet-max) {
  .visible-sm { display: none !important; }
  @include responsive-visibility('.visible-md');
  .visible-lg { display: none !important; }

  @include responsive-visibility('.hidden-sm');
  .hidden-md { display: none !important; }
  @include responsive-visibility('.hidden-lg');
}

// For desktops
@media (min-width: $screen-desktop) {
  .visible-sm { display: none !important; }
  .visible-md { display: none !important; }
  @include responsive-visibility('.visible-lg');

  @include responsive-visibility('.hidden-sm');
  @include responsive-visibility('.hidden-md');

  .hidden-lg { display: none !important; }
}

// Print utilities
.visible-print { display: none !important; }
.hidden-print  { }

@media print {
  @include responsive-visibility('.visible-print');

  .hidden-print { display: none !important; }
}




/* END Common */